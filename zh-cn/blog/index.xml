<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blog on Changsheng Quan</title><link>https://quancs.github.io/zh-cn/blog/</link><description>Recent content in Blog on Changsheng Quan</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sat, 04 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://quancs.github.io/zh-cn/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>深度窄带语音分离</title><link>https://quancs.github.io/zh-cn/blog/nbss/</link><pubDate>Sat, 04 Dec 2021 00:00:00 +0000</pubDate><guid>https://quancs.github.io/zh-cn/blog/nbss/</guid><description>function play(elmnt) { const music = new Audio(elmnt.getAttribute("href")); music.play(); } 摘要 本文基于深度学习技术解决了多通道多语音分离问题。 我们提出了一种端到端窄带网络，以STFT域的一个频率的多通道混合信号作为输入，输出该频率的分离信号。 在窄带（单个频带）上，空间信息的不同（或通道间差异）可以很好地区分不同位置的说话人。 这种差异在许多基于窄带的语音分离方法中被大量使用，例如波束成形和空间矢量聚类。 本文提出的网络通过训练来学习如何自动利用此信息，来得到语音分离的规则。 这样的规则对任何频率都是有效的，因此网络可以由所有频率共享。 此外，本文还提出了一种全频带的组合不变训练方法，以解决大多数窄带方法所遇到的频率组合问题。 实验表明，通过对窄带信息的深度学习，本文提出的方法优于使用真值的波束成形方法和最先进的基于深度学习的分离方法。
方法 本方法主要包括两个部分： 第一个部分是在单个频带上如何用网络进行分离； 第二个部分是关于如何去解决频率组合问题来训练神经网络。
以下内容假设麦克风个数为M，说话人个数为N。
1) 窄带语音分离 准备窄带的输入. 为什么选择窄带? 因为窄带包含了充足的不同说话人的空间信息。
网络处理: 训练神经网络来实现在窄带输入上分离不同说话人的目的。
2) 全频带组合不变训练（Full-band Permutation Invariant Training） 频率组合问题（Frequency Permutation Problem）——如何得到分离出的信号的跨频率的相关性？例子：两说话人情况下的一种可能的频率组合方式：
本文提出的解决办法——频率绑定，强制认为在同一个输出位置的结果属于同一个说话人。
损失函数
$$ fPIT(\boldsymbol{\rm \widehat{Y}}^{1},\ldots, \boldsymbol{\rm \widehat{Y}}^{N}, \boldsymbol{\rm {Y}}^{1},\ldots,\boldsymbol{\rm {Y}}^{N})=\mathop{min}_{p\in \mathcal{P}}\frac{1}{N}\sum_n \mathcal{L}(\boldsymbol{{\rm {Y}}}^n,\boldsymbol{{\rm \widehat{Y}}}^{p(n)}) $$
其中，P是全部可能的频率组合组成的集合，p是其中一种可能的频率组合。 对于每对预测值和真值，负SI-SDR[1]被用来计算他们的损失。
实验结果 在8通道2说话人情况下，和当前最佳分离算法的性能比较
模型 SDR SI-SDR NB-PESQ WB-PESQ 分离前 0.</description></item></channel></rss>